services:
  emqx:
    image: emqx/emqx-enterprise:5.8.5
    container_name: emqx
    environment:
      EMQX_LOG__CONSOLE__LEVEL: debug
      EMQX_API_KEY__BOOTSTRAP_FILE: "/opt/emqx-bootstrap/api-keys.txt"
    ports:
      - "1883:1883"
      - "8083:8083"
      - "18083:18083"
    networks:
      - emqx_network
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx", "ctl", "status"]
      interval: 5s
      timeout: 25s
      retries: 5
    volumes:
      - ./test/assets/certs:/certs:ro
      - ./test/assets/api-keys.txt:/opt/emqx-bootstrap/api-keys.txt:ro
    depends_on:
      mysql:
        condition: service_healthy
      mysql-ssl:
        condition: service_healthy
      redis:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: public
      MYSQL_DATABASE: emqx
      MYSQL_USER: emqx
      MYSQL_PASSWORD: public
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - emqx_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 25s
      retries: 5

  mysql-ssl:
    image: mysql:8.0
    container_name: mysql-ssl
    command: >
      --default-authentication-plugin=mysql_native_password
      --ssl-ca=/certs/ca.crt
      --ssl-cert=/certs/mysql-server.crt
      --ssl-key=/certs/mysql-server.key
      --require-secure-transport=ON
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: public
      MYSQL_DATABASE: emqx
      MYSQL_USER: emqx
      MYSQL_PASSWORD: public
    ports:
      - "3307:3306"
    volumes:
      - ./test/assets/certs:/certs:ro
      - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - emqx_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 25s
      retries: 5

  redis:
    image: redis:7.0
    container_name: redis
    command: redis-server --requirepass public
    ports:
      - "6379:6379"
    networks:
      - emqx_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "public", "ping"]
      interval: 5s
      timeout: 25s
      retries: 5

  redis-ssl:
    image: redis:7.0
    container_name: redis-ssl
    command: >
      redis-server
      --requirepass public
      --tls-port 6380
      --port 0
      --tls-cert-file /certs/redis-server.crt
      --tls-key-file /certs/redis-server.key
      --tls-ca-cert-file /certs/ca.crt
    ports:
      - "6380:6380"
    volumes:
      - ./test/assets/certs:/certs:ro
    networks:
      - emqx_network
    healthcheck:
      test:
        - "CMD"
        - "redis-cli"
        - "--tls"
        - "--cert"
        - "/certs/redis-server.crt"
        - "--key"
        - "/certs/redis-server.key"
        - "--cacert"
        - "/certs/ca.crt"
        - "-h"
        - "localhost"
        - "-p"
        - "6380"
        - "-a"
        - "public"
        - "ping"
      timeout: 25s
      retries: 5

networks:
  emqx_network:
    driver: bridge
